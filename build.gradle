buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
        maven {
            url = 'https://repo.mattmalec.com/repository/releases'
        }
        maven {
            url = "https://maven.minecraftforge.net/"
        }
    }

    dependencies {
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2'
        classpath 'org.mangorage:MangoBotGradle:4.0.9'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'MangoBotGradle'
apply plugin: 'maven-publish'

group = 'org.mangorage'
version = '10.0.' + getGitVersion()

def getGitVersion() {
    def result = "git rev-list HEAD --count".execute().text.trim()
    if (result.empty) {
        throw new RuntimeException("Failed to retrieve commit count")
    } else {
        def commitCount = result.toInteger()
        // Use the commitCount variable further in your script
        return commitCount;
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += "--enable-preview"
}

tasks.withType(JavaExec) {
    jvmArgs += "--enable-preview"
}

repositories {
    mavenCentral()
    maven {
        url = 'https://maven.minecraftforge.net/'
    }
    maven {
        url 'https://m2.dv8tion.net/releases'
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://maven.lavalink.dev/snapshots/'
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    installer('org.mangorage:installer:3.0.22')
    bot('org.mangorage:mangobot:10.0.410')

    library('org.eclipse.mylyn.github:org.eclipse.egit.github.core:2.1.5')
    library('org.kohsuke:github-api:1.321')
    library('dev.arbjerg:lavaplayer:afec211f05c9dcf0b6ee44276a02f0316ea2458a-SNAPSHOT')
}

test {
    useJUnitPlatform()
}

MangoBotConfig {
    setJarTask(jar)

    if (System.getenv().containsKey("SERVER_TOKEN") && System.getenv().containsKey("SERVER_ID")) {
        enableRestartServerTask(
                System.getenv("SERVER_ID") as String,
                "https://panel.sodiumhosting.com/",
                System.getenv("SERVER_TOKEN") as String,
                null
        )
    }

    addResolver(e -> {
        if (e.versionID2().equals("afec211f05c9dcf0b6ee44276a02f0316ea2458a-SNAPSHOT"))
            return e.complete(
                    e.groupID(),
                    e.nameID(),
                    e.versionID(),
                    e.nameID2(),
                    "afec211f05c9dcf0b6ee44276a02f0316ea2458a-20240330.121616-1"
            )
        return e.pass()
    })
}

publishing {
    publications.register("mangobotaddon", MavenPublication) {
        artifact jar

        pom {
            name = 'MangoBot Core Plugin'
            description = 'The Core Plugin for MangoBot'
            url = 'https://github.com/MangoRageBot/MangoBot'
            issueManagement {
                system = 'github'
                url = 'https://github.com/MangoRageBot/MangoBot/issues'
            }
            developers {
                developer {
                    id = 'mangorage'
                    name = 'MangoRage'
                }
            }
        }
    }

    repositories {
        maven {
            url = "https://maven.minecraftforge.net/"

            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}
