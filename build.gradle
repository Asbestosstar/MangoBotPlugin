buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
        maven {
            url = 'https://s01.oss.sonatype.org/content/repositories/releases/'
        }
        maven {
            url = 'https://repo.mattmalec.com/repository/releases'
        }
    }

    dependencies {
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2'
        classpath 'io.github.realmangorage:gradleutils:3.0.2-beta2109'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'gradleutils'
apply plugin: 'maven-publish'

def projectRootDir = project.projectDir.toPath()
def getCommitNumber = {
    def proc = 'git rev-list --count master'.execute()
    proc.waitFor()
    return proc.text.trim()
}

def props = new Properties()
file("secrets.properties").withInputStream { props.load(it) }

group = 'org.mangorage'
version "%s.%s.%s".formatted(
        1,
        0,
        getCommitNumber()
)

repositories {
    mavenCentral()
    maven {
        url = 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }
    maven {
        url = 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }
    maven {
        url 'https://m2.dv8tion.net/releases'
    }
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    installer('io.github.realmangorage:installer:2.2.0')
    bot('io.github.realmangorage:mangobot:1.0.346')

    library('org.kohsuke:github-api:1.123')
}

test {
    useJUnitPlatform()
}

MangoBotConfig {
    setJarTask(jar)
    setReleaseTask(() -> getTasks().getByName("publish"))
    if (props != null && props.containsKey("SERVER_TOKEN")) {
        enableRestartServerTask(
                "f32263f3",
                "https://panel.sodiumhosting.com/",
                props.get("SERVER_TOKEN") as String,
                null
        )
    }
}

publishing {
    publications.register("mangobotaddon", MavenPublication) {
        artifact jar

        groupId = 'io.github.realmangorage'
        artifactId = 'mangobotplugin'

        pom {
            name = 'MangoBot Core Plugin'
            description = 'The Core Plugin for MangoBot'
            url = 'https://github.com/MangoRageBot/MangoBot'
            issueManagement {
                system = 'github'
                url = 'https://github.com/MangoRageBot/MangoBot/issues'
            }
            developers {
                developer {
                    id = 'mangorage'
                    name = 'MangoRage'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/releases/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            group "io.github.mangorage"
            credentials {
                username = findProperty("mango.maven.username")
                password = findProperty("mango.maven.password")
            }
        }
    }
}
